name: "♻️ Deploy to Production Namespace"

on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
  KUBE_NAMESPACE: ${{ secrets.PROD_KUBE_NAMESPACE }}
  KUBE_CERT: ${{ secrets.PROD_KUBE_CERT }}
  KUBE_TOKEN: ${{ secrets.PROD_KUBE_TOKEN }}

  IMAGE_TAG: ${{ github.ref_name }}
  ECR_REGISTRY: ${{ vars.PROD_ECR_REGISTRY }}
  ECR_REPOSITORY: ${{ vars.PROD_ECR_REPOSITORY }}

  ADMIN_GITHUB_TOKEN: ${{ secrets.PROD_ADMIN_GITHUB_TOKEN }}
  FLASK_APP_SECRET: ${{ secrets.PROD_FLASK_APP_SECRET }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  SENTRY_DSN_KEY: ${{secrets.SENTRY_DSN_KEY }}

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.PROD_ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.PROD_ECR_REGION }}

      - uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr
      - run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-to-prod:
    needs: build-push
    runs-on: ubuntu-latest
    container: alpine/k8s:1.23.17
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to the cluster
        run: |
          echo "${KUBE_CERT}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${KUBE_TOKEN}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${KUBE_NAMESPACE}
          kubectl config get-contexts
          kubectl config use-context ${KUBE_CLUSTER}

      - name: Deploy helm chart to operations-engineering-join-github-prod
        run: |
          helm upgrade join-github \
            helm/join-github \
            --install \
            --atomic \
            --force \
            --wait \
            --namespace ${KUBE_NAMESPACE} \
            --values=helm/join-github/values-prod.yaml \
            --set app.deployment.env.AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID} \
            --set app.deployment.env.AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET} \
            --set app.deployment.env.APP_SECRET_KEY=${FLASK_APP_SECRET} \
            --set app.deployment.env.ADMIN_GITHUB_TOKEN=${ADMIN_GITHUB_TOKEN} \
            --set app.deployment.env.SENTRY_DSN_KEY=${SENTRY_DSN_KEY} \
            --set app.deployment.image.repository=${ECR_REGISTRY}/${ECR_REPOSITORY} \
            --set app.deployment.image.tag=${IMAGE_TAG} 
